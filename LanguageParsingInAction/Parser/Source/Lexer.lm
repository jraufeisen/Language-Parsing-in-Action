    // MARK: - Objective-C Header
%{
    // We can embed Objective-C code inside the .lex or .yacc file
    // Either enclose the code with %{ and %}
    // Or indent code with a TAB
    #import <Foundation/Foundation.h>
    #import "y.tab.h"
    #import "MessageBlocks.h"

    void yyerror(char *s);
%}

    // MARK: - Lexing
%%
    /* Recognize FLOAT token */
[0-9]+\.[0-9]* { yylval.value = atof(yytext); return FLOAT; }

    /* Recognize INTEGER token */
[0-9]+ { yylval.value = atof(yytext); return INTEGER; }

    /* Skip whitespaces */
[\n\t ] { }

    /* Recognize IDENTIFIER token */
[a-zA-Z]+ { yylval.identifier = [NSString stringWithFormat:@"%s", yytext]; return IDENTIFIER; }

    /* Catch all rule */
. { return yytext[0]; };
%%

    // MARK: - Objective-C Implementation
    int yywrap() {
        // This is a place where one can append more text if it would be needed, quit for now
        return 1;
    }

    void yyerror(char *s) {
        if (ParseTestFailBlock) {
            ParseTestFailBlock([NSString stringWithFormat:@"%s", s]);
        }
    }
